<project name="JerseyDoc" default="release" basedir=".">

	<!-- set global properties for this build -->
	<property name="build.dir" value="../build" />
	<property name="src.dir" location="../src" />
	<property name="java.dir" location="${src.dir}/java/main" />
	<property name="test.java.dir" location="${src.dir}/java/test" />
	<property name="tmp.dir" location="../tmp" />
	<property name="class.dir" location="../classes" />
	<property name="test.class.dir" location="../testclasses" />
	<property name="release.dir" location="../release" />
	<property name="lib.dir" location="../lib" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp />
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${tmp.dir}" />
		<mkdir dir="${class.dir}" />
		<mkdir dir="${test.class.dir}" />
		<mkdir dir="${release.dir}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">

		<javac srcdir="${java.dir}" destdir="${class.dir}" debug="true">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>

		<javac srcdir="${java.dir}:${test.java.dir}" destdir="${test.class.dir}"  debug="true">
			<classpath>
				<fileset dir="${lib.dir}">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</javac>
	</target>

	<target name="release" depends="clean,compile,test" description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${tmp.dir}/files" />

		<copy todir="${tmp.dir}/files">
			<fileset dir="${class.dir}" />
			<fileset dir="${java.dir}">
				<include name="**/*.properties" />
			</fileset>
		</copy>


		<jar jarfile="${release.dir}\jerseydoc.jar" basedir="${tmp.dir}/files">
		</jar>


		<!-- Create example directory -->
		<mkdir dir="${release.dir}/example" />
		<mkdir dir="${release.dir}/example/build" />
		<mkdir dir="${release.dir}/example/lib" />
		<mkdir dir="${release.dir}/example/src" />


		<copy todir="${release.dir}/example/build">
			<fileset dir="${src.dir}/ant" />
		</copy>

		<copy todir="${release.dir}/example/lib">
			<fileset dir="${lib.dir}">
				<exclude name="hamcrest-core-1.3.jar" />
				<exclude name="mockito-all-1.9.5.jar" />
				<exclude name="junit-4.11.jar" />
			</fileset>
		</copy>

		<copy todir="${release.dir}/example/lib">
			<fileset dir="${release.dir}">
				<include name="jerseydoc.jar" />
			</fileset>
		</copy>

		<copy todir="${release.dir}/example/src">
			<fileset dir="${test.java.dir}">
				<include name="com/rabidgremlin/example/**/*" />
			</fileset>
		</copy>

	</target>

	<target name="clean" description="clean up">
		<delete dir="${tmp.dir}" />
		<delete dir="${class.dir}" />
		<delete dir="${test.class.dir}" />
		<delete dir="${release.dir}" />
	</target>

	<target name="test" depends="init,compile">
		<mkdir dir="${tmp.dir}/reports" />


		<available property="haveToolsJar" value="${java.home}/lib/tools.jar" file="${java.home}/lib/tools.jar" />
		<available property="haveToolsJar" value="${java.home}/../lib/tools.jar" file="${java.home}/../lib/tools.jar" />
		<property name="tools.jar" location="${haveToolsJar}" />

		<path id="test.classpath">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
			<pathelement location="${test.class.dir}" />
			<pathelement location="${tools.jar}" />
		</path>

		<taskdef resource="org/jacoco/ant/antlib.xml">
			<classpath path="${build.dir}/jacocoant.jar" />
		</taskdef>


		<echo message="JUnit Test results will be written to ${tmp.dir}/junit.xml" />

		<coverage destfile="${tmp.dir}/jacoco.exec">
			<junit fork="yes" haltonfailure="yes" showoutput="yes" includeantruntime="yes">
				<sysproperty key="test.source.path" value="${test.java.dir}" />
				<classpath refid="test.classpath" />
				<formatter type="xml" usefile="true" />
				<batchtest fork="yes" todir="${tmp.dir}">
					<fileset dir="${src.dir}/java/test">
						<include name="**/*Test*.java" />
						<exclude name="**/*NoBuild.java" />
					</fileset>
				</batchtest>
			</junit>
		</coverage>

		<junitreport todir="${tmp.dir}/reports">
			<fileset dir="${tmp.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report format="frames" todir="${tmp.dir}/reports/html/junit" />
		</junitreport>

		<report>
			<executiondata>
				<file file="${tmp.dir}/jacoco.exec" />
			</executiondata>

			<structure name="Coverage for Jerseydoc">
				<classfiles>
					<fileset dir="${class.dir}" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${java.dir}" />				
				</sourcefiles>
			</structure>

			<html destdir="${tmp.dir}/reports/html/coverage" />
		</report>
	</target>
</project>